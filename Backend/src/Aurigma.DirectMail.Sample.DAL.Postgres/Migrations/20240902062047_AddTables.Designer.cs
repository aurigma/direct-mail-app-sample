// <auto-generated />
using System;
using Aurigma.DirectMail.Sample.DAL.Postgres.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Aurigma.DirectMail.Sample.DAL.Postgres.Migrations
{
    [DbContext(typeof(PostgresDataContext))]
    [Migration("20240902062047_AddTables")]
    partial class AddTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.CampaignDal", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Campaign");
                });

            modelBuilder.Entity("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.CategoryDal", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f95777aa-16e5-4e49-a464-b86139e861ab"),
                            CreationTime = new DateTime(2024, 2, 22, 4, 33, 56, 146, DateTimeKind.Utc),
                            Title = "Postcards"
                        },
                        new
                        {
                            Id = new Guid("cfd22d2b-cf98-4c72-8992-c791790c90bd"),
                            CreationTime = new DateTime(2024, 2, 22, 4, 33, 56, 146, DateTimeKind.Utc),
                            Title = "Letters"
                        },
                        new
                        {
                            Id = new Guid("dd4d7f75-a6a7-45d2-a74e-d2d686719e96"),
                            CreationTime = new DateTime(2024, 2, 22, 4, 33, 56, 146, DateTimeKind.Utc),
                            Title = "Selfmailers"
                        });
                });

            modelBuilder.Entity("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.CompanyDal", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.ToTable("Company");

                    b.HasData(
                        new
                        {
                            Id = new Guid("28394c53-2b8a-48c3-96de-b0c066b3aa9a"),
                            CreationTime = new DateTime(2024, 2, 22, 4, 33, 56, 146, DateTimeKind.Utc),
                            Name = "Aurigma"
                        },
                        new
                        {
                            Id = new Guid("6e3f0333-01e9-4e74-8a2f-bbe1e2d5b5fc"),
                            CreationTime = new DateTime(2024, 2, 22, 4, 33, 56, 146, DateTimeKind.Utc),
                            Name = "Some Company"
                        });
                });

            modelBuilder.Entity("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.JobDal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CustomersCanvasProjectId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LineItemId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LineItemId");

                    b.ToTable("Job");
                });

            modelBuilder.Entity("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.LineItemDal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CampaignId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DesignId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int?>("ProductVariantId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<string>("TemplateId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("ProductId");

                    b.ToTable("LineItem");
                });

            modelBuilder.Entity("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.ProductDal", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("Title")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e5f8b300-83e7-4754-af1e-86a9946e303e"),
                            CategoryId = new Guid("f95777aa-16e5-4e49-a464-b86139e861ab"),
                            CreationTime = new DateTime(2024, 2, 22, 4, 33, 56, 146, DateTimeKind.Utc),
                            Price = 55.9m,
                            Title = "Folded Card"
                        },
                        new
                        {
                            Id = new Guid("d7f28121-9b3a-4927-87f7-97a6f9c79381"),
                            CategoryId = new Guid("dd4d7f75-a6a7-45d2-a74e-d2d686719e96"),
                            CreationTime = new DateTime(2024, 2, 22, 4, 33, 56, 146, DateTimeKind.Utc),
                            Price = 65.9m,
                            Title = "Selfmailer"
                        },
                        new
                        {
                            Id = new Guid("8b844daf-a3cf-4b4c-9758-79404b903379"),
                            CategoryId = new Guid("cfd22d2b-cf98-4c72-8992-c791790c90bd"),
                            CreationTime = new DateTime(2024, 2, 22, 4, 33, 56, 146, DateTimeKind.Utc),
                            Price = 55.9m,
                            Title = "Letter"
                        },
                        new
                        {
                            Id = new Guid("fe9971da-6721-478c-8256-5d10951ee7f8"),
                            CategoryId = new Guid("f95777aa-16e5-4e49-a464-b86139e861ab"),
                            CreationTime = new DateTime(2024, 2, 22, 4, 33, 56, 146, DateTimeKind.Utc),
                            Price = 65.9m,
                            Title = "Postcard"
                        });
                });

            modelBuilder.Entity("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.RecipientDal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AddressLine1")
                        .HasColumnType("text");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("FsCode")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("QRCoreUrl")
                        .HasColumnType("text");

                    b.Property<Guid>("RecipientListId")
                        .HasColumnType("uuid");

                    b.Property<string>("ReturnAddressLine1")
                        .HasColumnType("text");

                    b.Property<string>("ReturnAddressLine2")
                        .HasColumnType("text");

                    b.Property<string>("ReturnCity")
                        .HasColumnType("text");

                    b.Property<string>("ReturnState")
                        .HasColumnType("text");

                    b.Property<string>("ReturnZip")
                        .HasColumnType("text");

                    b.Property<string>("Signature")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("Zip")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RecipientListId");

                    b.ToTable("Recipient");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bca1aab6-1212-403b-8d37-4ee768dbc73a"),
                            AddressLine1 = "4896 Tomscot Court",
                            AddressLine2 = "Room 1808",
                            City = "Jacksonville",
                            CreationTime = new DateTime(2024, 2, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Vivi",
                            FsCode = "21695-939",
                            FullName = "Vivi Wardrope",
                            QRCoreUrl = "https://customerscanvas.com/",
                            RecipientListId = new Guid("5146239e-aa2f-4797-a250-1ddeed5dee53"),
                            ReturnAddressLine1 = "66 Canal Center Plaza",
                            ReturnAddressLine2 = " Suite 505",
                            ReturnCity = "Alexandria",
                            ReturnState = "Virginia",
                            ReturnZip = "22314",
                            Signature = "Dmitry Sevostyanov",
                            State = "Florida",
                            Title = "Customer's Canvas CEO",
                            Zip = "32277"
                        },
                        new
                        {
                            Id = new Guid("dc631b26-ae82-435e-a798-67cac1270153"),
                            AddressLine1 = "71207 Eliot Circle",
                            AddressLine2 = "Suite 96",
                            City = "Columbus",
                            CreationTime = new DateTime(2024, 2, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Lavinie",
                            FsCode = "16590-372",
                            FullName = "Lavinie Torrecilla",
                            QRCoreUrl = "https://customerscanvas.com/",
                            RecipientListId = new Guid("5146239e-aa2f-4797-a250-1ddeed5dee53"),
                            ReturnAddressLine1 = "66 Canal Center Plaza",
                            ReturnAddressLine2 = " Suite 505",
                            ReturnCity = "Alexandria",
                            ReturnState = "Virginia",
                            ReturnZip = "22314",
                            Signature = "Dmitry Sevostyanov",
                            State = "Ohio",
                            Title = "Customer's Canvas CEO",
                            Zip = "43215"
                        },
                        new
                        {
                            Id = new Guid("7c6d555d-b18b-407c-afad-886d9fe8be26"),
                            AddressLine1 = "909 Mallard Plaza",
                            AddressLine2 = "Suite 4",
                            City = "Las Vegas",
                            CreationTime = new DateTime(2024, 2, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Ceciley",
                            FsCode = "21695-939",
                            FullName = "Ceciley Crudginton",
                            QRCoreUrl = "https://customerscanvas.com/",
                            RecipientListId = new Guid("5146239e-aa2f-4797-a250-1ddeed5dee53"),
                            ReturnAddressLine1 = "66 Canal Center Plaza",
                            ReturnAddressLine2 = " Suite 505",
                            ReturnCity = "Alexandria",
                            ReturnState = "Virginia",
                            ReturnZip = "22314",
                            Signature = "Dmitry Sevostyanov",
                            State = "Nevada",
                            Title = "Customer's Canvas CEO",
                            Zip = "89193"
                        },
                        new
                        {
                            Id = new Guid("98042e62-8073-486d-8bd6-b60a8ae3253d"),
                            AddressLine1 = "52 Mariners Cove Crossing",
                            AddressLine2 = "Apt 730",
                            City = "Shreveport",
                            CreationTime = new DateTime(2024, 2, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Franni",
                            FsCode = "21695-939",
                            FullName = "Franni De Haven",
                            QRCoreUrl = "https://customerscanvas.com/",
                            RecipientListId = new Guid("5146239e-aa2f-4797-a250-1ddeed5dee53"),
                            ReturnAddressLine1 = "66 Canal Center Plaza",
                            ReturnAddressLine2 = " Suite 505",
                            ReturnCity = "Alexandria",
                            ReturnState = "Virginia",
                            ReturnZip = "22314",
                            Signature = "Dmitry Sevostyanov",
                            State = "Louisiana",
                            Title = "Customer's Canvas CEO",
                            Zip = "71151"
                        },
                        new
                        {
                            Id = new Guid("23a6a26a-a655-49b5-97a2-9e4168ab8d3d"),
                            AddressLine1 = "3672 Sutteridge Point",
                            AddressLine2 = "Room 1746",
                            City = "Tacoma",
                            CreationTime = new DateTime(2024, 2, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Anna-diana",
                            FsCode = "16590-372",
                            FullName = "Anna-diana Clynmans",
                            QRCoreUrl = "https://customerscanvas.com/",
                            RecipientListId = new Guid("5146239e-aa2f-4797-a250-1ddeed5dee53"),
                            ReturnAddressLine1 = "66 Canal Center Plaza",
                            ReturnAddressLine2 = " Suite 505",
                            ReturnCity = "Alexandria",
                            ReturnState = "Virginia",
                            ReturnZip = "22314",
                            Signature = "Dmitry Sevostyanov",
                            State = "Washington",
                            Title = "Customer's Canvas CEO",
                            Zip = "98442"
                        },
                        new
                        {
                            Id = new Guid("c169b56b-5cd5-4625-aa5e-a6d393e87e89"),
                            AddressLine1 = "2018 La Follette Crossing",
                            AddressLine2 = "1st Floor",
                            City = "Shawnee Mission",
                            CreationTime = new DateTime(2024, 2, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Marley",
                            FsCode = "21695-939",
                            FullName = "Marley Retchford",
                            QRCoreUrl = "https://customerscanvas.com/",
                            RecipientListId = new Guid("5146239e-aa2f-4797-a250-1ddeed5dee53"),
                            ReturnAddressLine1 = "66 Canal Center Plaza",
                            ReturnAddressLine2 = " Suite 505",
                            ReturnCity = "Alexandria",
                            ReturnState = "Virginia",
                            ReturnZip = "22314",
                            Signature = "Dmitry Sevostyanov",
                            State = "Kansas",
                            Title = "Customer's Canvas CEO",
                            Zip = "66276"
                        },
                        new
                        {
                            Id = new Guid("dea4f26a-6559-46b2-8f7e-40adebe6e28d"),
                            AddressLine1 = "26031 6th Street",
                            AddressLine2 = "1st Floor",
                            City = "Taber",
                            CreationTime = new DateTime(2024, 2, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Katherine",
                            FsCode = "16590-372",
                            FullName = "Katherine Freebury",
                            QRCoreUrl = "https://customerscanvas.com/",
                            RecipientListId = new Guid("5146239e-aa2f-4797-a250-1ddeed5dee53"),
                            ReturnAddressLine1 = "66 Canal Center Plaza",
                            ReturnAddressLine2 = " Suite 505",
                            ReturnCity = "Alexandria",
                            ReturnState = "Virginia",
                            ReturnZip = "22314",
                            Signature = "Dmitry Sevostyanov",
                            State = "Alberta",
                            Title = "Customer's Canvas CEO",
                            Zip = "T1G"
                        },
                        new
                        {
                            Id = new Guid("b3f39871-59cc-480b-8dfa-ad85c19cdf85"),
                            AddressLine1 = "75420 Shopko Center",
                            AddressLine2 = "Suite 6",
                            City = "Baton Rouge",
                            CreationTime = new DateTime(2024, 2, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Raul",
                            FsCode = "16590-372",
                            FullName = "Raul Garioch",
                            QRCoreUrl = "https://customerscanvas.com/",
                            RecipientListId = new Guid("5146239e-aa2f-4797-a250-1ddeed5dee53"),
                            ReturnAddressLine1 = "66 Canal Center Plaza",
                            ReturnAddressLine2 = " Suite 505",
                            ReturnCity = "Alexandria",
                            ReturnState = "Virginia",
                            ReturnZip = "22314",
                            Signature = "Dmitry Sevostyanov",
                            State = "Louisiana",
                            Title = "Customer's Canvas CEO",
                            Zip = "70826"
                        },
                        new
                        {
                            Id = new Guid("f8fe101f-ab09-41f9-8f37-222222bf9c34"),
                            AddressLine1 = "64612 Menomonie Parkway",
                            AddressLine2 = "Suite 58",
                            City = "Savannah",
                            CreationTime = new DateTime(2024, 2, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Dania",
                            FsCode = "16590-372",
                            FullName = "Dania Roberds",
                            QRCoreUrl = "https://customerscanvas.com/",
                            RecipientListId = new Guid("5146239e-aa2f-4797-a250-1ddeed5dee53"),
                            ReturnAddressLine1 = "66 Canal Center Plaza",
                            ReturnAddressLine2 = " Suite 505",
                            ReturnCity = "Alexandria",
                            ReturnState = "Virginia",
                            ReturnZip = "22314",
                            Signature = "Dmitry Sevostyanov",
                            State = "Georgia",
                            Title = "Customer's Canvas CEO",
                            Zip = "31416"
                        },
                        new
                        {
                            Id = new Guid("71de1460-5cfe-4338-a69c-b4b36627b018"),
                            AddressLine1 = "628 Vahlen Plaza",
                            AddressLine2 = "PO Box 26324",
                            City = "Yonkers",
                            CreationTime = new DateTime(2024, 2, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Cory",
                            FsCode = "16590-372",
                            FullName = "Cory Merricks",
                            QRCoreUrl = "https://customerscanvas.com/",
                            RecipientListId = new Guid("5146239e-aa2f-4797-a250-1ddeed5dee53"),
                            ReturnAddressLine1 = "66 Canal Center Plaza",
                            ReturnAddressLine2 = " Suite 505",
                            ReturnCity = "Alexandria",
                            ReturnState = "Virginia",
                            ReturnZip = "22314",
                            Signature = "Dmitry Sevostyanov",
                            State = "New York",
                            Title = "Customer's Canvas CEO",
                            Zip = "10705"
                        },
                        new
                        {
                            Id = new Guid("3df4fa1f-78e3-4972-8332-7f52e4e8654a"),
                            AddressLine1 = "8 Gerald Plaza",
                            AddressLine2 = "Apt 1031",
                            City = "Tyler",
                            CreationTime = new DateTime(2024, 2, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Perren",
                            FsCode = "21695-939",
                            FullName = "Perren Ivanishev",
                            QRCoreUrl = "https://customerscanvas.com/",
                            RecipientListId = new Guid("5146239e-aa2f-4797-a250-1ddeed5dee53"),
                            ReturnAddressLine1 = "66 Canal Center Plaza",
                            ReturnAddressLine2 = " Suite 505",
                            ReturnCity = "Alexandria",
                            ReturnState = "Virginia",
                            ReturnZip = "22314",
                            Signature = "Dmitry Sevostyanov",
                            State = "Texas",
                            Title = "Customer's Canvas CEO",
                            Zip = "75710"
                        },
                        new
                        {
                            Id = new Guid("7dccb8e6-eef0-4684-9361-f4441d827e60"),
                            AddressLine1 = "616 Superior Terrace",
                            AddressLine2 = "PO Box 99333",
                            City = "Louisville",
                            CreationTime = new DateTime(2024, 2, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Patsy",
                            FsCode = "21695-939",
                            FullName = "Patsy Hocking",
                            QRCoreUrl = "https://customerscanvas.com/",
                            RecipientListId = new Guid("5146239e-aa2f-4797-a250-1ddeed5dee53"),
                            ReturnAddressLine1 = "66 Canal Center Plaza",
                            ReturnAddressLine2 = " Suite 505",
                            ReturnCity = "Alexandria",
                            ReturnState = "Virginia",
                            ReturnZip = "22314",
                            Signature = "Dmitry Sevostyanov",
                            State = "Kentucky",
                            Title = "Customer's Canvas CEO",
                            Zip = "40298"
                        },
                        new
                        {
                            Id = new Guid("061bd192-a37a-4996-b9af-cae96fc9fcbc"),
                            AddressLine1 = "04616 Valley Edge Trail",
                            AddressLine2 = "Apt 137",
                            City = "San Francisco",
                            CreationTime = new DateTime(2024, 2, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Jeffie",
                            FsCode = "21695-939",
                            FullName = "Jeffie Langdridge",
                            QRCoreUrl = "https://customerscanvas.com/",
                            RecipientListId = new Guid("5146239e-aa2f-4797-a250-1ddeed5dee53"),
                            ReturnAddressLine1 = "66 Canal Center Plaza",
                            ReturnAddressLine2 = " Suite 505",
                            ReturnCity = "Alexandria",
                            ReturnState = "Virginia",
                            ReturnZip = "22314",
                            Signature = "Dmitry Sevostyanov",
                            State = "California",
                            Title = "Customer's Canvas CEO",
                            Zip = "94159"
                        },
                        new
                        {
                            Id = new Guid("4fc6ffdb-ed5d-4423-8b1a-09ed8f2cf568"),
                            AddressLine1 = "27 Onsgard Plaza",
                            AddressLine2 = "Apt 975",
                            City = "Springfield",
                            CreationTime = new DateTime(2024, 2, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Tremain",
                            FsCode = "21695-939",
                            FullName = "Tremain St. Aubyn",
                            QRCoreUrl = "https://customerscanvas.com/",
                            RecipientListId = new Guid("5146239e-aa2f-4797-a250-1ddeed5dee53"),
                            ReturnAddressLine1 = "66 Canal Center Plaza",
                            ReturnAddressLine2 = " Suite 505",
                            ReturnCity = "Alexandria",
                            ReturnState = "Virginia",
                            ReturnZip = "22314",
                            Signature = "Dmitry Sevostyanov",
                            State = "Illinois",
                            Title = "Customer's Canvas CEO",
                            Zip = "62723"
                        },
                        new
                        {
                            Id = new Guid("84267050-2581-44f2-bc35-f203cbfe3b79"),
                            AddressLine1 = "0 5th Crossing",
                            AddressLine2 = "2nd Floor",
                            City = "Scottsdale",
                            CreationTime = new DateTime(2024, 2, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Davis",
                            FsCode = "16590-372",
                            FullName = "Davis Troak",
                            QRCoreUrl = "https://customerscanvas.com/",
                            RecipientListId = new Guid("5146239e-aa2f-4797-a250-1ddeed5dee53"),
                            ReturnAddressLine1 = "66 Canal Center Plaza",
                            ReturnAddressLine2 = " Suite 505",
                            ReturnCity = "Alexandria",
                            ReturnState = "Virginia",
                            ReturnZip = "22314",
                            Signature = "Dmitry Sevostyanov",
                            State = "Arizona",
                            Title = "Customer's Canvas CEO",
                            Zip = "85260"
                        });
                });

            modelBuilder.Entity("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.RecipientImageDal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Path")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RecipientImage");

                    b.HasData(
                        new
                        {
                            Id = new Guid("21a24e53-f58d-3252-f652-fb48370e1539"),
                            CreationTime = new DateTime(2024, 2, 22, 4, 33, 56, 146, DateTimeKind.Utc),
                            Name = "image-1.png",
                            Path = "App_Data/PrivateImages/image-1.png"
                        });
                });

            modelBuilder.Entity("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.RecipientImageRecipientDal", b =>
                {
                    b.Property<Guid>("RecipientId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RecipientImageId")
                        .HasColumnType("uuid");

                    b.HasKey("RecipientId", "RecipientImageId");

                    b.HasIndex("RecipientImageId");

                    b.ToTable("RecipientImageRecipientDal");

                    b.HasData(
                        new
                        {
                            RecipientId = new Guid("bca1aab6-1212-403b-8d37-4ee768dbc73a"),
                            RecipientImageId = new Guid("21a24e53-f58d-3252-f652-fb48370e1539")
                        },
                        new
                        {
                            RecipientId = new Guid("dc631b26-ae82-435e-a798-67cac1270153"),
                            RecipientImageId = new Guid("21a24e53-f58d-3252-f652-fb48370e1539")
                        },
                        new
                        {
                            RecipientId = new Guid("7c6d555d-b18b-407c-afad-886d9fe8be26"),
                            RecipientImageId = new Guid("21a24e53-f58d-3252-f652-fb48370e1539")
                        },
                        new
                        {
                            RecipientId = new Guid("98042e62-8073-486d-8bd6-b60a8ae3253d"),
                            RecipientImageId = new Guid("21a24e53-f58d-3252-f652-fb48370e1539")
                        },
                        new
                        {
                            RecipientId = new Guid("23a6a26a-a655-49b5-97a2-9e4168ab8d3d"),
                            RecipientImageId = new Guid("21a24e53-f58d-3252-f652-fb48370e1539")
                        },
                        new
                        {
                            RecipientId = new Guid("c169b56b-5cd5-4625-aa5e-a6d393e87e89"),
                            RecipientImageId = new Guid("21a24e53-f58d-3252-f652-fb48370e1539")
                        },
                        new
                        {
                            RecipientId = new Guid("dea4f26a-6559-46b2-8f7e-40adebe6e28d"),
                            RecipientImageId = new Guid("21a24e53-f58d-3252-f652-fb48370e1539")
                        },
                        new
                        {
                            RecipientId = new Guid("b3f39871-59cc-480b-8dfa-ad85c19cdf85"),
                            RecipientImageId = new Guid("21a24e53-f58d-3252-f652-fb48370e1539")
                        },
                        new
                        {
                            RecipientId = new Guid("f8fe101f-ab09-41f9-8f37-222222bf9c34"),
                            RecipientImageId = new Guid("21a24e53-f58d-3252-f652-fb48370e1539")
                        },
                        new
                        {
                            RecipientId = new Guid("71de1460-5cfe-4338-a69c-b4b36627b018"),
                            RecipientImageId = new Guid("21a24e53-f58d-3252-f652-fb48370e1539")
                        },
                        new
                        {
                            RecipientId = new Guid("3df4fa1f-78e3-4972-8332-7f52e4e8654a"),
                            RecipientImageId = new Guid("21a24e53-f58d-3252-f652-fb48370e1539")
                        },
                        new
                        {
                            RecipientId = new Guid("7dccb8e6-eef0-4684-9361-f4441d827e60"),
                            RecipientImageId = new Guid("21a24e53-f58d-3252-f652-fb48370e1539")
                        },
                        new
                        {
                            RecipientId = new Guid("061bd192-a37a-4996-b9af-cae96fc9fcbc"),
                            RecipientImageId = new Guid("21a24e53-f58d-3252-f652-fb48370e1539")
                        },
                        new
                        {
                            RecipientId = new Guid("4fc6ffdb-ed5d-4423-8b1a-09ed8f2cf568"),
                            RecipientImageId = new Guid("21a24e53-f58d-3252-f652-fb48370e1539")
                        },
                        new
                        {
                            RecipientId = new Guid("84267050-2581-44f2-bc35-f203cbfe3b79"),
                            RecipientImageId = new Guid("21a24e53-f58d-3252-f652-fb48370e1539")
                        });
                });

            modelBuilder.Entity("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.RecipientListCampaignDal", b =>
                {
                    b.Property<Guid>("RecipientListId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uuid");

                    b.HasKey("RecipientListId", "CampaignId");

                    b.HasIndex("CampaignId");

                    b.ToTable("RecipientListCampaign");
                });

            modelBuilder.Entity("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.RecipientListDal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RecipientList");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5146239e-aa2f-4797-a250-1ddeed5dee53"),
                            CreationTime = new DateTime(2024, 2, 22, 4, 33, 56, 146, DateTimeKind.Utc),
                            Title = "Recipients"
                        });
                });

            modelBuilder.Entity("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.CampaignDal", b =>
                {
                    b.HasOne("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.CompanyDal", "Company")
                        .WithMany("Campaigns")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.JobDal", b =>
                {
                    b.HasOne("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.LineItemDal", "LineItem")
                        .WithMany("Jobs")
                        .HasForeignKey("LineItemId");

                    b.Navigation("LineItem");
                });

            modelBuilder.Entity("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.LineItemDal", b =>
                {
                    b.HasOne("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.CampaignDal", "Campaign")
                        .WithMany("LineItems")
                        .HasForeignKey("CampaignId");

                    b.HasOne("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.ProductDal", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Campaign");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.ProductDal", b =>
                {
                    b.HasOne("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.CategoryDal", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.RecipientDal", b =>
                {
                    b.HasOne("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.RecipientListDal", "RecipientList")
                        .WithMany("Recipients")
                        .HasForeignKey("RecipientListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RecipientList");
                });

            modelBuilder.Entity("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.RecipientImageRecipientDal", b =>
                {
                    b.HasOne("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.RecipientDal", "Recipient")
                        .WithMany("RecipientImageRecipients")
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.RecipientImageDal", "RecipientImage")
                        .WithMany("RecipientImageRecipients")
                        .HasForeignKey("RecipientImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipient");

                    b.Navigation("RecipientImage");
                });

            modelBuilder.Entity("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.RecipientListCampaignDal", b =>
                {
                    b.HasOne("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.CampaignDal", "Campaign")
                        .WithMany("RecipientListCampaigns")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.RecipientListDal", "RecipientList")
                        .WithMany("RecipientListCampaigns")
                        .HasForeignKey("RecipientListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("RecipientList");
                });

            modelBuilder.Entity("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.CampaignDal", b =>
                {
                    b.Navigation("LineItems");

                    b.Navigation("RecipientListCampaigns");
                });

            modelBuilder.Entity("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.CategoryDal", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.CompanyDal", b =>
                {
                    b.Navigation("Campaigns");
                });

            modelBuilder.Entity("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.LineItemDal", b =>
                {
                    b.Navigation("Jobs");
                });

            modelBuilder.Entity("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.RecipientDal", b =>
                {
                    b.Navigation("RecipientImageRecipients");
                });

            modelBuilder.Entity("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.RecipientImageDal", b =>
                {
                    b.Navigation("RecipientImageRecipients");
                });

            modelBuilder.Entity("Aurigma.DirectMail.Sample.DAL.EFCore.Entities.RecipientListDal", b =>
                {
                    b.Navigation("RecipientListCampaigns");

                    b.Navigation("Recipients");
                });
#pragma warning restore 612, 618
        }
    }
}
